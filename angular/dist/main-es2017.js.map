{"version":3,"sources":["./angular/$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./angular/src/app/app-routing.module.ts","./angular/src/app/app.component.ts","./angular/src/app/app.component.html","./angular/src/app/app.module.ts","./angular/src/app/providers/tab-id.provider.ts","./angular/src/environments/environment.ts","./angular/src/main.ts"],"names":[],"mappings":"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","file":"main-es2017.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 403;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'popup',\n    loadChildren: () => import('./modules/popup/popup.module').then(m => m.PopupModule)\n  },\n  {\n    path: 'options',\n    loadChildren: () => import('./modules/options/options.module').then(m => m.OptionsModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {}\r\n","<!-- Routing based on the module that opened (popup/options/tab) -->\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DialogModule } from '@ngneat/dialog';\nimport { DBConfig, NgxIndexedDBModule } from 'ngx-indexed-db';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nconst dbConfig: DBConfig = {\n  name: 'boPlanner',\n  version: 2,\n  objectStoresMeta: [{\n    store: 'orders',\n    storeConfig: { keyPath: 'id', autoIncrement: true },\n    storeSchema: [\n      { name: 'itemName', keypath: 'itemName', options: { unique: true } },\n      { name: 'appId', keypath: 'appId', options: { unique: false } },\n      { name: 'currencyId', keypath: 'currencyId', options: { unique: false } },\n      { name: 'price', keypath: 'price', options: { unique: false } },\n      { name: 'amount', keypath: 'amount', options: { unique: false } },\n      { name: 'created', keypath: 'created', options: { unique: false } },\n      { name: 'updated', keypath: 'updated', options: { unique: false } },\n    ]\n  }]\n};\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, NgxIndexedDBModule.forRoot(dbConfig), DialogModule.forRoot({\n    sizes: {\n      sm: {\n        width: 500,\n      },\n    }\n  })],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { InjectionToken } from '@angular/core';\n/**\n * provides the currently opened tab id\n */\nexport const TAB_ID = new InjectionToken<number>('CHROME_TAB_ID');\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { TAB_ID } from './app/providers/tab-id.provider';\n\nchrome.tabs.query({ active: true, currentWindow: true }, tabs => {\n  if (environment.production) {\n    enableProdMode();\n  }\n\n  const { id: tabId } = [...tabs].pop();\n\n  // provides the current Tab ID so you can send messages to the content page\n  platformBrowserDynamic([{ provide: TAB_ID, useValue: tabId }])\n    .bootstrapModule(AppModule)\n    .catch(error => console.error(error));\n});\n"],"sourceRoot":"webpack:///"}