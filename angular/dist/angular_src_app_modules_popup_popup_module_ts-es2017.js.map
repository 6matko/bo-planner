{"version":3,"sources":["./angular/src/app/models/base.model.ts","./angular/src/app/models/buy-order.model.ts","./angular/src/app/modules/popup/pages/popup/popup.component.ts","./angular/src/app/modules/popup/pages/popup/popup.component.html","./angular/src/app/modules/popup/popup-routing.module.ts","./angular/src/app/modules/popup/popup.module.ts","./node_modules/rxjs/_esm2015/internal/AsyncSubject.js","./node_modules/rxjs/_esm2015/internal/observable/bindCallback.js","./node_modules/rxjs/_esm2015/internal/observable/throwError.js"],"names":[],"mappings":"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AlB,kBAAkB;mHAHpB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,kBAAkB,oFAFnB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACduB;AAEM;AACU;AACH;;AAMrD,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAFb,CAAC,yDAAY,EAAE,qEAAkB,EAAE,+DAAmB,CAAC;mIAErD,WAAW,mBAHP,wEAAc,aACnB,yDAAY,EAAE,qEAAkB,EAAE,+DAAmB;;;;;;;;;;;;;;;;;;ACR7B;AACU;AACvC,2BAA2B,6CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6DAAkB;AACrC;AACA;AACA;AACA;AACA,mBAAmB,6DAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;;;;;;ACxC2C;AACI;AACR;AACiB;AACd;AACQ;AAC3C;AACP;AACA,YAAY,8DAAW;AACvB;AACA;AACA;AACA,oFAAoF,mDAAG,WAAW,sDAAO;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAU;AAC7B;AACA;AACA,kCAAkC,uDAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,mCAAmC;AAC9C,SAAS,UAAU;AACnB;AACA,uCAAuC,uDAAY;AACnD;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,wC;;;;;;;;;;;;;;;;ACpF2C;AACpC;AACP;AACA,mBAAmB,mDAAU;AAC7B;AACA;AACA,mBAAmB,mDAAU,gDAAgD,oBAAoB;AACjG;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA,sC","file":"angular_src_app_modules_popup_popup_module_ts-es2017.js","sourcesContent":["export class BaseEntity {\r\n    id: number;\r\n    created: Date;\r\n    updated: Date;\r\n}\r\n\r\nexport class ChromeCommunicationMessage<T = any> {\r\n    type: string;\r\n    data: T;\r\n}\r\n\r\nexport class Currency {\r\n    code: string;\r\n    currencyId: number;\r\n    symbol: string;\r\n}","import { BaseEntity } from './base.model';\r\n\r\nexport class BuyOrder extends BaseEntity {\r\n    /**\r\n     * Steam Community Market full item name\r\n     *\r\n     * @type {string}\r\n     * @memberof BuyOrder\r\n     */\r\n    itemName: string;\r\n    /**\r\n     * Page URL\r\n     *\r\n     * @type {string}\r\n     * @memberof BuyOrder\r\n     */\r\n    pageUrl?: string;\r\n    /**\r\n     * Buy order price\r\n     *\r\n     * @type {number}\r\n     * @memberof BuyOrder\r\n     */\r\n    price: number;\r\n    /**\r\n     * Buy order amount\r\n     *\r\n     * @type {number}\r\n     * @memberof BuyOrder\r\n     */\r\n    amount: number;\r\n    /**\r\n     * App id of SCM item\r\n     *\r\n     * @type {number}\r\n     * @memberof BuyOrder\r\n     */\r\n    appId: number;\r\n    /**\r\n     * Id of currency\r\n     *\r\n     * @type {number}\r\n     * @memberof BuyOrder\r\n     */\r\n    currencyId: number;\r\n    constructor(data: BuyOrder) {\r\n        super();\r\n        // Assigning data to current instance\r\n        Object.assign(this, data);\r\n        // If current buy order was previously created then setting current date\r\n        // as date when it was updated last time. Otherwise using date when it was created\r\n        // as initial value\r\n        this.updated = this.created ? new Date() : (this.created || new Date());\r\n        // Setting creation date\r\n        this.created = new Date();\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\r\nimport { bindCallback, Observable, of, Subject, throwError } from 'rxjs';\r\nimport { map, mergeMap, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { CURRENCY } from '../../../../core/currencies';\r\nimport { BuyOrder } from '../../../../models/buy-order.model';\r\nimport { ItemInfo } from '../../../../models/item-info.model';\r\nimport { TAB_ID } from '../../../../providers/tab-id.provider';\r\n\r\n@Component({\r\n  selector: 'app-popup',\r\n  templateUrl: 'popup.component.html',\r\n  styleUrls: ['popup.component.scss'],\r\n})\r\nexport class PopupComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Information about current item\r\n   *\r\n   * @type {ItemInfo}\r\n   * @memberof PopupComponent\r\n   */\r\n  itemInfo: ItemInfo;\r\n  /**\r\n   * Buy order planner form\r\n   *\r\n   * @type {FormGroup}\r\n   * @memberof PopupComponent\r\n   */\r\n  boForm: FormGroup;\r\n  /**\r\n   * Indicates if user wants to manually add information\r\n   *\r\n   * @type {boolean}\r\n   * @memberof PopupComponent\r\n   */\r\n  isManualAdding: boolean = false;\r\n  /**\r\n   * Indicates if manual adding was succcessful\r\n   *\r\n   * @type {boolean}\r\n   * @memberof PopupComponent\r\n   */\r\n  isManualSuccess: boolean = false;\r\n  /**\r\n   * List of known currencies\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  currencies = CURRENCY;\r\n  /**\r\n   * Error message\r\n   *\r\n   * @type {string}\r\n   * @memberof PopupComponent\r\n   */\r\n  error: string = '';\r\n  /**\r\n   * Subject that is responsible for unsubscribing when component gets destroyed\r\n   *\r\n   * @private\r\n   * @type {Subject<boolean>}\r\n   * @memberof PopupComponent\r\n   */\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    @Inject(TAB_ID) readonly tabId: number,\r\n    private cdr: ChangeDetectorRef,\r\n    private formBuilder: FormBuilder,\r\n    private dbService: NgxIndexedDBService,\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initInfo();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Completing subscriptions\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Method saves buy order plan\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  save() {\r\n    // If we have \"created\" property it means that buy order was already created and\r\n    // we need to update it. Otherwise creating new one\r\n    if (!this.isManualAdding && this.itemInfo.created) {\r\n      this.updateBuyOrder();\r\n    } else {\r\n      this.createBuyOrder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method redirects user to Steam Community Market page\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  goToSCM() {\r\n    // Changing current tab to SCM via redirect\r\n    chrome.tabs.update({ url: \"https://steamcommunity.com/market\" }, () => {\r\n      // Closing popup after redirect\r\n      window.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method opens a new tab with planned buy order list (options page)\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  goToPlannedList() {\r\n    chrome.runtime.openOptionsPage(() => {\r\n      // Closing popup after redirect\r\n      window.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method sends signal to contentPage to open buy order modal\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  /**\r\n   * Method sends signal to contentPage to open buy order modal\r\n   *\r\n   * @param {number} [tabId=this.tabId] Id of tab where to open buy order modal (by default current tab)\r\n   * @param {ItemInfo} [itemInfo=this.itemInfo] Information about item where to open buy order modal (by default current item)\r\n   * @memberof PopupComponent\r\n   */\r\n  openPlaceBuyOrderWindow(tabId: number = this.tabId, itemInfo: ItemInfo = this.itemInfo) {\r\n    chrome.tabs.sendMessage(tabId, {\r\n      type: 'openBOModal',\r\n      data: {\r\n        price: itemInfo.price,\r\n        amount: itemInfo.amount,\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method sends signal to contentPage to open buy order modal on every opened SCM listing page\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  openPlaceBuyOrderWindowOnAllTabs() {\r\n    // Getting list of all SCM listing pages to open BO modals on them\r\n    bindCallback<chrome.tabs.Tab[]>(chrome.tabs.query.bind(this, { url: 'https://steamcommunity.com/market/listings/*' }))()\r\n      .pipe(\r\n        // Getting list of tab IDs because we need only them.\r\n        // Using mergeMap to make concurency\r\n        mergeMap(tabs => tabs.map(tab => tab.id)),\r\n        // Requesting information about item for each opened tab\r\n        mergeMap(tabId =>\r\n          bindCallback<ItemInfo>(chrome.tabs.sendMessage.bind(this, tabId, { type: 'getInfoFromPage' }))()\r\n            .pipe(\r\n              switchMap(itemInfo => {\r\n                // In case of error returning undefined\r\n                if (chrome.runtime.lastError) {\r\n                  return undefined;\r\n                }\r\n\r\n                // Trying to get stored information in DB (if user added planned buy order). In case if there is no\r\n                // stored information then we are returning simple item info that we gathered from page (so price & amount wouldn't be pre-filled)\r\n                return this.getSavedInfoFromDB(itemInfo).pipe(map(itemFromDB => itemFromDB ?? itemInfo))\r\n              }),\r\n              map(itemInfo => {\r\n                // If everything is fine then returning tab Id and info about item\r\n                return {\r\n                  itemInfo,\r\n                  tabId,\r\n                };\r\n              }),\r\n            )\r\n        ),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.openPlaceBuyOrderWindow(result.tabId, result.itemInfo);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method marks manual adding as enabled with all necessary setup\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  openManualAdd() {\r\n    this.isManualAdding = true;\r\n    // Adding REQUIRED validators cause we need values\r\n    this.boForm.get('appId').setValidators(Validators.required);\r\n    this.boForm.get('currencyId').setValidators(Validators.required);\r\n  }\r\n\r\n  /**\r\n   * Method clears success message (hide from display)\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  clearSuccessMessage() {\r\n    this.isManualSuccess = false;\r\n  }\r\n\r\n  /**\r\n   * Method requests information about item from DB in case if user placed planned order\r\n   *\r\n   * @private\r\n   * @param {ItemInfo} itemInfo Information about item to look in DB\r\n   * @return {Observable<ItemInfo>} Returns `Observable` with found item info\r\n   * @memberof PopupComponent\r\n   */\r\n  private getSavedInfoFromDB(itemInfo: ItemInfo): Observable<ItemInfo> {\r\n    return this.dbService.getByIndex('orders', 'itemName', itemInfo.itemName)\r\n      .pipe(map(boEntity => {\r\n        // Updating current info object with information from DB\r\n        Object.assign(itemInfo, boEntity);\r\n        return itemInfo;\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * Method gets information about item from page\r\n   *\r\n   * @private\r\n   * @param {number} [tabId=this.tabId] Id of tab from which information gathernig should be done. By default current page\r\n   * @return {Observable<ItemInfo>} Returns `Observable` with item info\r\n   * @memberof PopupComponent\r\n   */\r\n  private getItemInfoFromPage(tabId: number = this.tabId): Observable<ItemInfo> {\r\n    // Sending signal to content page to gather information from page itself\r\n    return bindCallback<ItemInfo>(chrome.tabs.sendMessage.bind(this, this.tabId, { type: 'getInfoFromPage' }))()\r\n      .pipe(\r\n        // If there was an error, returning undefined. Otherwise giving info from thee page\r\n        map(info => chrome.runtime.lastError ? undefined : info),\r\n        switchMap(info => {\r\n          // If we have info from page then getting stored information about this item from IndexedDB\r\n          if (info) {\r\n            return this.getSavedInfoFromDB(info);\r\n            // If there is no info then reeturning same info object\r\n          } else {\r\n            return of(info);\r\n          }\r\n        }),\r\n        takeUntil(this.destroy$),\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Method initializes popup based on information gathered from current page\r\n   *\r\n   * @private\r\n   * @memberof PopupComponent\r\n   */\r\n  private initInfo() {\r\n    this.getItemInfoFromPage()\r\n      .subscribe(info => {\r\n        // Storing information for further usage ONLY if user is currently on item info page.\r\n        // Otherwise we can't get any information and should show informative message so user\r\n        // goes to specific SCM item\r\n        if (info?.pageUrl?.includes('/market/listings/')) {\r\n          this.itemInfo = info;\r\n          // Updating form value\r\n          this.boForm.patchValue(info);\r\n          // Triggering change detection since there are changes that view needs to re-render\r\n          // and for some reason it doesn't happen automatically. Maybe due chrome extension\r\n          this.cdr.detectChanges();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method creates new buy order plan and stores it in DB\r\n   *\r\n   * @private\r\n   * @memberof PopupComponent\r\n   */\r\n  private createBuyOrder() {\r\n    // Creating new entity based on info on form\r\n    const newBOEntity = new BuyOrder(this.boForm.value);\r\n\r\n    // Checking if item with same name is already added\r\n    this.dbService.getByIndex('orders', 'itemName', newBOEntity.itemName)\r\n      .pipe(\r\n        switchMap(item => {\r\n          // If item exists then throwing error\r\n          if (item) {\r\n            return throwError('Item with this name already exists');\r\n          }\r\n          // Otherwise adding item\r\n          return this.dbService.add('orders', newBOEntity);\r\n        }),\r\n        takeUntil(this.destroy$),\r\n      )\r\n      .subscribe(result => {\r\n        // If user manually adds item then displaying success and resetting form\r\n        // so he can do it again\r\n        if (this.isManualAdding) {\r\n          this.boForm.reset({ price: 0, amount: 1 });\r\n          this.boForm.markAsUntouched();\r\n          this.isManualSuccess = true;\r\n        } else {\r\n          // Updating form value with latest update\r\n          this.boForm.patchValue(result);\r\n          this.updateItemInfo(result);\r\n        }\r\n\r\n        // Clearing error message when all is done\r\n        this.error = ''\r\n\r\n        // Triggering change detection since there are changes that view needs to re-render\r\n        // and for some reason it doesn't happen automatically. Maybe due chrome extension\r\n        this.cdr.detectChanges();\r\n      }, err => {\r\n        // Setting error message for display\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method updates buy order plan and saves it to DB\r\n   *\r\n   * @private\r\n   * @memberof PopupComponent\r\n   */\r\n  private updateBuyOrder() {\r\n    // Updating current item info with data in form\r\n    const updatedBuyOrder = Object.assign(this.itemInfo, this.boForm.value);\r\n    // Creating entity for save\r\n    const updatedBOEntity = new BuyOrder(updatedBuyOrder);\r\n    // Updating in DB\r\n    this.dbService.update('orders', updatedBOEntity)\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n      )\r\n      .subscribe(results => {\r\n        // Updating form value with updated entity. Otherwise we would have to search for it in all results\r\n        this.boForm.patchValue(updatedBOEntity);\r\n        this.updateItemInfo(updatedBOEntity);\r\n        // Triggering change detection since there are changes that view needs to re-render\r\n        // and for some reason it doesn't happen automatically. Maybe due chrome extension\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method updates currently stored item info with latest changes (from Indexed DB)\r\n   *\r\n   * @private\r\n   * @param {BuyOrder} boEntity Stored/updated entity in IndexedDB. These values will be added to item info\r\n   * @memberof PopupComponent\r\n   */\r\n  private updateItemInfo(boEntity: BuyOrder) {\r\n    Object.assign(this.itemInfo, boEntity);\r\n  }\r\n\r\n  private createForm() {\r\n    this.boForm = this.formBuilder.group({\r\n      itemName: ['', Validators.required],\r\n      price: [0, [Validators.min(0), Validators.required]],\r\n      amount: [1, [Validators.min(1), Validators.required]],\r\n      appId: [null],\r\n      currencyId: [null],\r\n    });\r\n  }\r\n}\r\n","<div id=\"page-wrapper\">\n  <h3\n    class=\"title uppercase text-xl mb-3 mx-auto text-center font-semibold pt-0 tracking-widest text-gray-900 rounded-lg dark-mode:text-white focus:outline-none focus:shadow-outline\">\n    Buy order planner\n  </h3>\n\n  <ng-container *ngIf=\"itemInfo || isManualAdding; else goToSCMListingTmpl\">\n    <form\n      class=\"w-100 bg-white px-4 pt-4\"\n      [formGroup]=\"boForm\"\n      (ngSubmit)=\"save()\">\n      <div class=\"mb-4\">\n        <label\n          for=\"itemName\"\n          class=\"block text-gray-500 font-medium text-sm mb-2\"\n          >Full item name</label\n        >\n        <input\n          [ngClass]=\"{\n            'ring-2 ring-red-600':\n              boForm.get('itemName').touched && boForm.get('itemName').invalid\n          }\"\n          formControlName=\"itemName\"\n          (focus)=\"clearSuccessMessage()\"\n          autofocus\n          name=\"itemName\"\n          type=\"text\"\n          placeholder=\"Enter item name\"\n          class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" />\n      </div>\n\n      <div class=\"grid grid-cols-2 gap-4\">\n        <div>\n          <label\n            for=\"boPrice\"\n            class=\"block text-gray-500 font-medium text-sm mb-2\"\n            >Price</label\n          >\n          <input\n            [ngClass]=\"{\n              'ring-2 ring-red-600':\n                boForm.get('price').touched && boForm.get('price').invalid\n            }\"\n            formControlName=\"price\"\n            name=\"boPrice\"\n            type=\"number\"\n            min=\"0\"\n            step=\"0.01\"\n            placeholder=\"Buy order price\"\n            class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" />\n        </div>\n        <div>\n          <label\n            for=\"boAmount\"\n            class=\"block text-gray-500 font-medium text-sm mb-2\"\n            >Amount to buy</label\n          >\n          <input\n            [ngClass]=\"{\n              'ring-2 ring-red-600':\n                boForm.get('amount').touched && boForm.get('amount').invalid\n            }\"\n            formControlName=\"amount\"\n            name=\"boAmount\"\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            placeholder=\"Amount to buy\"\n            class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" />\n        </div>\n      </div>\n\n      <div class=\"grid grid-cols-2 gap-4 mt-4\" *ngIf=\"isManualAdding\">\n        <div>\n          <label\n            for=\"appId\"\n            class=\"block text-gray-500 font-medium text-sm mb-2\"\n            >App ID</label\n          >\n          <input\n            [ngClass]=\"{\n              'ring-2 ring-red-600':\n                boForm.get('appId').touched && boForm.get('appId').invalid\n            }\"\n            formControlName=\"appId\"\n            name=\"appId\"\n            type=\"number\"\n            min=\"0\"\n            step=\"1\"\n            placeholder=\"Game app ID\"\n            class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" />\n        </div>\n        <div>\n          <label\n            for=\"currency\"\n            class=\"block text-gray-500 font-medium text-sm mb-2\"\n            >Currency</label\n          >\n          <div class=\"flex justify-center\">\n            <div class=\"w-full\">\n              <select\n                [ngClass]=\"{\n                  'ring-2 ring-red-600':\n                    boForm.get('currencyId').touched &&\n                    boForm.get('currencyId').invalid\n                }\"\n                formControlName=\"currencyId\"\n                class=\"form-select appearance-none bg-gray-200 border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                aria-label=\"Currency select\">\n                <option\n                  *ngFor=\"let currency of currencies\"\n                  [value]=\"currency.currencyId\">\n                  {{ currency.code }}\n                  <span *ngIf=\"currency.symbol\">({{ currency.symbol }})</span>\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"\">\n        <button\n          [disabled]=\"boForm.invalid\"\n          [ngClass]=\"{ 'opacity-50 cursor-not-allowed': boForm.invalid }\"\n          type=\"submit\"\n          class=\"w-3/5 block mx-auto shadow transition duration-300 ease-in-out bg-purple-800 hover:bg-purple-900 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded mt-4\">\n          Save\n        </button>\n      </div>\n    </form>\n\n    <div\n      class=\"m-4 mt-0 pt-8\"\n      *ngIf=\"\n        !isManualAdding &&\n        (!itemInfo?.activeBOPrice || !itemInfo?.activeBOAmount)\n      \">\n      <button\n        (click)=\"openPlaceBuyOrderWindow()\"\n        type=\"button\"\n        class=\"w-full block mx-auto shadow transition duration-300 ease-in-out bg-green-500 hover:bg-green-600 focus:shadow-outline focus:outline-none text-white font-bold text-xl py-2 px-4 rounded mb-4\">\n        PLACE BUY ORDER\n      </button>\n    </div>\n\n    <div\n      *ngIf=\"itemInfo?.activeBOPrice && itemInfo?.activeBOAmount\"\n      class=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mt-6 mb-3\"\n      role=\"alert\">\n      <div class=\"flex justify-between font-bold text-sm\">\n        <p>Active buy order</p>\n        <p>\n          {{ itemInfo?.activeBOAmount }} x {{ itemInfo?.activeBOPriceString }}\n        </p>\n      </div>\n      <p>You already have an active buy order for this item.</p>\n    </div>\n    <div\n      *ngIf=\"isManualAdding && isManualSuccess\"\n      class=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mt-6 mb-3\"\n      role=\"alert\">\n      <div class=\"flex justify-between font-bold text-md\">\n        <p>Item was added</p>\n      </div>\n    </div>\n    <div\n      *ngIf=\"error\"\n      class=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mt-6 mb-3\"\n      role=\"alert\">\n      <div class=\"flex justify-between font-bold text-md\">\n        <p>{{ error }}</p>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template #goToSCMListingTmpl>\n    <div\n      class=\"bg-green-50 border-t-4 border-green-400 rounded-b text-green-600 px-4 py-3 shadow-md\"\n      role=\"alert\">\n      <div class=\"flex\">\n        <div class=\"py-1\">\n          <svg\n            class=\"fill-current h-6 w-6 text-green-400 mr-4\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\">\n            <path\n              d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93\n              17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9\n              11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\n          </svg>\n        </div>\n        <div class=\"flex items-center\">\n          <p class=\"font-bold text-sm\">\n            This extension works only on SCM listing page.\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"w-full mb-5\">\n      <button\n        (click)=\"goToSCM()\"\n        type=\"button\"\n        rel=\"nofollow\"\n        class=\"w-3/5 block text-center mx-auto shadow transition duration-300 ease-in-out bg-yellow-600 hover:bg-yellow-700 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded mt-4\">\n        Go to market page\n      </button>\n    </div>\n\n    <div class=\"relative flex items-center\">\n      <div class=\"flex-grow border-t border-gray-400\"></div>\n      <span class=\"flex-shrink mx-4\">OR</span>\n      <div class=\"flex-grow border-t border-gray-400\"></div>\n    </div>\n\n    <div class=\"w-full mb-5\">\n      <button\n        (click)=\"openManualAdd()\"\n        type=\"button\"\n        rel=\"nofollow\"\n        class=\"w-3/5 block text-center mx-auto shadow transition duration-300 ease-in-out bg-green-500 hover:bg-green-600 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded mt-4\">\n        Manually add item information\n      </button>\n    </div>\n  </ng-template>\n\n  <p class=\"mb-2\" *ngIf=\"itemInfo?.updated\">\n    Last update: {{ itemInfo.updated | date: 'medium' }}\n  </p>\n\n  <div\n    class=\"bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 mt-6 mb-3\"\n    role=\"alert\">\n    <div class=\"flex justify-between\">\n      <div>\n        <p class=\"font-bold text-sm\">Place buy order on all pages</p>\n        <p>\n          This action will open \"Place Buy Order\" window on all opened SCM\n          pages.\n        </p>\n      </div>\n      <button\n        (click)=\"openPlaceBuyOrderWindowOnAllTabs()\"\n        type=\"button\"\n        class=\"ml-10 shadow transition duration-300 ease-in-out bg-blue-700 hover:bg-blue-900 focus:shadow-outline focus:outline-none text-white font-bold text-sm py-2 px-4 rounded\">\n        OPEN\n      </button>\n    </div>\n  </div>\n\n  <div class=\"flex justify-between items-center w-full\">\n    <button\n      type=\"button\"\n      class=\"flex text-black hover:text-blue-900 duration-200 background-transparent font-bold uppercase px-0 py-1 text-xs outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        class=\"mr-1\"\n        viewBox=\"0 0 16 16\">\n        <path\n          d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47\n            7.59.4.07.55-.17.55-.38\n            0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01\n            1.08.58 1.23.82.72 1.21 1.87.87\n            2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95\n            0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21\n            2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82\n            2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87\n            3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0\n            .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\" />\n      </svg>\n      <a\n        href=\"https://github.com/6matko/bo-planner\"\n        target=\"_blank\"\n        class=\"hover:text-blue-900 duration-200\"\n        rel=\"noreferrer nofollow\">\n        Github\n      </a>\n    </button>\n    <small\n      >by\n      <a\n        href=\"https://steamcommunity.com/id/6matko/\"\n        target=\"_blank\"\n        rel=\"noreferrer nofollow\"\n        class=\"hover:text-blue-900 duration-200\"\n        >6matko</a\n      ></small\n    >\n    <button\n      (click)=\"goToPlannedList()\"\n      type=\"button\"\n      class=\"text-blue-500 hover:text-blue-900 duration-200 background-transparent font-bold uppercase px-0 py-1 text-xs outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all\">\n      View all items\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PopupComponent } from './pages/popup/popup.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: PopupComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PopupRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopupComponent } from './pages/popup/popup.component';\nimport { PopupRoutingModule } from './popup-routing.module';\n\n@NgModule({\n  declarations: [PopupComponent],\n  imports: [CommonModule, PopupRoutingModule, ReactiveFormsModule]\n})\nexport class PopupModule { }\n","import { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    _subscribe(subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return super._subscribe(subscriber);\n    }\n    next(value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    }\n    error(error) {\n        if (!this.hasCompleted) {\n            super.error(error);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            super.next(this.value);\n        }\n        super.complete();\n    }\n}\n//# sourceMappingURL=AsyncSubject.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map"],"sourceRoot":"webpack:///"}