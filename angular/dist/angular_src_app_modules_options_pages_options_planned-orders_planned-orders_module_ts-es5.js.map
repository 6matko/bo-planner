{"version":3,"sources":["webpack:///angular/src/app/core/pagination/pagination.component.html","webpack:///angular/src/app/core/pagination/pagination.component.ts","webpack:///angular/src/app/core/pagination/pagination.module.ts","webpack:///angular/src/app/core/pagination/pagination.utils.ts","webpack:///angular/src/app/modules/options/pages/options/planned-orders/buy-order-item/buy-order-item.component.html","webpack:///angular/src/app/modules/options/pages/options/planned-orders/buy-order-item/buy-order-item.component.ts","webpack:///angular/src/app/modules/options/pages/options/planned-orders/planned-order-routing.module.ts","webpack:///angular/src/app/modules/options/pages/options/planned-orders/planned-orders.component.html","webpack:///angular/src/app/modules/options/pages/options/planned-orders/planned-orders.component.ts","webpack:///angular/src/app/modules/options/pages/options/planned-orders/planned-orders.module.ts","webpack:///node_modules/rxjs/_esm2015/internal/Scheduler.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/Action.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/async.js"],"names":["PaginationComponent","changePage","EventEmitter","initialPage","pageSize","maxPages","pager","items","length","setPage","changes","currentValue","previousValue","page","paginate","pageOfItems","slice","startIndex","endIndex","emit","PaginationModule","CommonModule","totalItems","currentPage","totalPages","Math","ceil","startPage","endPage","maxPagesBeforeCurrentPage","floor","maxPagesAfterCurrentPage","min","pages","Array","from","keys","map","i","BuyOrderItemComponent","dialog","dbService","itemRemoved","confirm","title","body","orderItem","itemName","afterClosed$","pipe","switchMap","confirmed","id","of","subscribe","removed","routes","path","component","PlannedOrdersComponent","PlannedOrdersRoutingModule","RouterModule","optionsFacade","cdr","allOrdersForDisplay","currentPageItems","dropdownOpen","showPerPage","showPerPageOptions","searchSubject","BehaviorSubject","plannedOrders","destroy$","Subject","getPlannedOrders","orders","currencySign","getCurrency","symbol","asObservable","debounceTime","concatMap","searchText","filter","order","toLowerCase","includes","takeUntil","filteredResults","foundResults","next","complete","size","index","item","currentPageIndex","indexForRemoval","pagination","splice","search","onChangePage","PlannedOrdersModule","FormsModule","Scheduler","SchedulerAction","now","work","delay","state","schedule","Date","dueTime","scheduler","async","source","lift","DebounceTimeOperator","subscriber","DebounceTimeSubscriber","destination","debouncedSubscription","lastValue","hasValue","value","clearDebounce","add","dispatchNext","debouncedNext","remove","unsubscribe","Subscriber","Action","Subscription","AsyncAction","pending","closed","recycleAsyncId","requestAsyncId","setInterval","flush","bind","clearInterval","undefined","Error","error","_execute","errored","errorValue","e","actions","indexOf","AsyncScheduler","delegate","active","scheduled","action","push","execute","shift","asyncScheduler"],"mappings":"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","file":"angular_src_app_modules_options_pages_options_planned-orders_planned-orders_module_ts-es5.js","sourcesContent":["<div\n  class=\"flex flex-col items-center py-6\"\n  *ngIf=\"pager.pages && pager.pages.length\">\n  <div class=\"flex text-gray-700\">\n    <div\n      [ngClass]=\"{ disabled: pager.currentPage === 1 }\"\n      (click)=\"setPage(pager.currentPage - 1)\"\n      class=\"\n        h-12\n        w-12\n        mr-1\n        flex\n        justify-center\n        items-center\n        rounded-full\n        bg-white\n        cursor-pointer\n      \">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"100%\"\n        height=\"100%\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"feather feather-chevron-left w-6 h-6\">\n        <polyline points=\"15 18 9 12 15 6\"></polyline>\n      </svg>\n    </div>\n    <div class=\"flex h-12 font-medium rounded-full\">\n      <div\n        *ngFor=\"let page of pager.pages\"\n        [ngClass]=\"{ 'bg-purple-500 text-white': pager.currentPage === page }\"\n        (click)=\"setPage(page)\"\n        class=\"\n          w-12\n          md:flex\n          justify-center\n          items-center\n          hidden\n          cursor-pointer\n          leading-5\n          transition\n          duration-150\n          ease-in\n          rounded-full\n        \">\n        {{ page }}\n      </div>\n    </div>\n    <div\n      [ngClass]=\"{ disabled: pager.currentPage === pager.totalPages }\"\n      (click)=\"setPage(pager.currentPage + 1)\"\n      class=\"\n        h-12\n        w-12\n        ml-1\n        flex\n        justify-center\n        items-center\n        rounded-full\n        bg-white\n        cursor-pointer\n      \">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"100%\"\n        height=\"100%\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"feather feather-chevron-right w-6 h-6\">\n        <polyline points=\"9 18 15 12 9 6\"></polyline>\n      </svg>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { paginate } from './pagination.utils';\n\n// Src: https://jasonwatmore.com/post/2019/06/18/angular-8-simple-pagination-example\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent implements OnInit, OnChanges {\n  @Input() items: Array<any>;\n  @Output() changePage = new EventEmitter<any>(true);\n  @Input() initialPage = 1;\n  @Input() pageSize = 10;\n  @Input() maxPages = 6;\n  pager: any = {};\n  constructor() { }\n\n  ngOnInit() {\n    // set page if items array isn't empty\n    if (this.items && this.items.length) {\n      this.setPage(this.initialPage);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Reset page if items array has changed\n    if (changes?.items?.currentValue !== changes?.items?.previousValue) {\n      this.setPage(this.initialPage);\n    }\n\n    // Reset page if page size has changed\n    if (changes?.pageSize?.currentValue !== changes?.pageSize?.previousValue) {\n      this.setPage(this.initialPage);\n    }\n  }\n\n  setPage(page: number) {\n    // get new pager object for specified page\n    this.pager = paginate(this.items.length, page, this.pageSize, this.maxPages);\n\n    // get new page of items from items array\n    var pageOfItems = this.items.slice(this.pager.startIndex, this.pager.endIndex + 1);\n\n    // call change page function in parent component\n    this.changePage.emit(pageOfItems);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PaginationComponent],\n  exports: [\n    PaginationComponent,\n  ],\n})\nexport class PaginationModule { }\n","// Src: https://github.com/cornflourblue/jw-angular-pagination/blob/27c4a7c0fbc635c14227da62bb94cc3520ca3a75/projects/jw-pagination/node_modules/jw-paginate/lib/jw-paginate.js#L2\r\nexport function paginate(totalItems, currentPage, pageSize, maxPages) {\r\n    if (currentPage === void 0) { currentPage = 1; }\r\n    if (pageSize === void 0) { pageSize = 10; }\r\n    if (maxPages === void 0) { maxPages = 10; }\r\n    // calculate total pages\r\n    var totalPages = Math.ceil(totalItems / pageSize);\r\n    // ensure current page isn't out of range\r\n    if (currentPage < 1) {\r\n        currentPage = 1;\r\n    }\r\n    else if (currentPage > totalPages) {\r\n        currentPage = totalPages;\r\n    }\r\n    var startPage, endPage;\r\n    if (totalPages <= maxPages) {\r\n        // total pages less than max so show all pages\r\n        startPage = 1;\r\n        endPage = totalPages;\r\n    }\r\n    else {\r\n        // total pages more than max so calculate start and end pages\r\n        var maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\r\n        var maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\r\n        if (currentPage <= maxPagesBeforeCurrentPage) {\r\n            // current page near the start\r\n            startPage = 1;\r\n            endPage = maxPages;\r\n        }\r\n        else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\r\n            // current page near the end\r\n            startPage = totalPages - maxPages + 1;\r\n            endPage = totalPages;\r\n        }\r\n        else {\r\n            // current page somewhere in the middle\r\n            startPage = currentPage - maxPagesBeforeCurrentPage;\r\n            endPage = currentPage + maxPagesAfterCurrentPage;\r\n        }\r\n    }\r\n    // calculate start and end item indexes\r\n    var startIndex = (currentPage - 1) * pageSize;\r\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n    // create an array of pages to ng-repeat in the pager control\r\n    var pages = Array.from(Array((endPage + 1) - startPage).keys()).map(function (i) { return startPage + i; });\r\n    // return object with all pager properties required by the view\r\n    return {\r\n        totalItems: totalItems,\r\n        currentPage: currentPage,\r\n        pageSize: pageSize,\r\n        totalPages: totalPages,\r\n        startPage: startPage,\r\n        endPage: endPage,\r\n        startIndex: startIndex,\r\n        endIndex: endIndex,\r\n        pages: pages\r\n    };\r\n}","<div\n  class=\"bg-white w-full flex flex-col items-center p-2 pb-0 rounded-xl shadow border hover:shadow-xl duration-200 animate__animated animate__fadeIn\"\n  *ngIf=\"orderItem\">\n  <div class=\"flex items-center w-full item-content\">\n    <div class=\"flex-grow p-3\">\n      <div class=\"font-semibold text-gray-700\">{{ orderItem.itemName }}</div>\n      <a\n        [href]=\"\n          'https://steamcommunity.com/market/listings/' +\n          orderItem.appId +\n          '/' +\n          orderItem.itemName\n        \"\n        type=\"button\"\n        class=\"text-sm text-gray-500 hover:text-blue-900 duration-200\"\n        target=\"_blank\">\n        View on market\n      </a>\n    </div>\n    <div class=\"p-2 text-right\">\n      <div class=\"text-lg leading-3\">\n        {{ orderItem.price | number: '1.2-2' }}{{ currencySign }}\n      </div>\n      <small>x{{ orderItem.amount }}</small>\n      <hr class=\"divider\" />\n      <div>\n        Total:\n        <b>\n          {{ orderItem.price * orderItem.amount | number: '1.2-2'\n          }}{{ currencySign }}\n        </b>\n      </div>\n    </div>\n  </div>\n  <button\n    type=\"button\"\n    class=\"ml-auto text-red-500 hover:text-red-700 duration-200 transition-all pb-2 px-4\"\n    (click)=\"removeItem()\">\n    Remove\n  </button>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DialogService } from '@ngneat/dialog';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { BuyOrder } from '../../../../../../models/buy-order.model';\n\n@Component({\n  selector: 'app-buy-order-item',\n  templateUrl: './buy-order-item.component.html',\n  styleUrls: ['./buy-order-item.component.scss']\n})\nexport class BuyOrderItemComponent implements OnInit {\n  /**\n   * Current buy order plan item\n   *\n   * @type {BuyOrder}\n   * @memberof BuyOrderItemComponent\n   */\n  @Input() orderItem: BuyOrder;\n  /**\n   * Event emitter which emits information about removed item when it got removed\n   *\n   * @type {EventEmitter<BuyOrder>}\n   * @memberof BuyOrderItemComponent\n   */\n  @Output() itemRemoved: EventEmitter<BuyOrder> = new EventEmitter();\n  /**\n   * Currency sign for visual display\n   *\n   * @type {string}\n   * @memberof BuyOrderItemComponent\n   */\n  @Input() currencySign: string;\n  constructor(\n    private dialog: DialogService,\n    private dbService: NgxIndexedDBService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Method show confirmation modal and on confirmed actions sends signal to remove item\n   *\n   * @memberof BuyOrderItemComponent\n   */\n  removeItem() {\n    this.dialog.confirm({\n      title: `Confirm your actions`,\n      body: `You are about to remove <b>${this.orderItem.itemName}</b>.<br />Continue ?`\n    })\n      .afterClosed$\n      .pipe(\n        switchMap(confirmed => {\n          // If user confirmed his actions - Removing from DB\n          if (confirmed) {\n            return this.dbService.delete<BuyOrder>('orders', this.orderItem.id)\n              .pipe(\n                // After successful removal returning \"true\" as confirmation for successful action\n                // because we don't care about updated list in this case\n                map(() => true)\n              );\n          } else {\n            // If user canceled his action returning \"false\"\n            return of(false);\n          }\n        })\n      )\n      .subscribe(removed => {\n        // Explicitlly checking for \"true\" value because there are cases where this can be truthy\n        // but in our case we need to be sure that exactly Delete operation was completed\n        if (removed === true) {\n          this.itemRemoved.emit(this.orderItem);\n        }\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlannedOrdersComponent } from './planned-orders.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: PlannedOrdersComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class PlannedOrdersRoutingModule { }\r\n","<div class=\"container mx-auto\">\n  <div class=\"my-auto mx-auto\">\n    <div class=\"relative w-full lg:w-1/2 mx-auto text-gray-600 mb-0\">\n      <input type=\"search\" name=\"serch\" placeholder=\"Filter items by name\" [ngModel]=\"searchText\"\n        (ngModelChange)=\"search($event)\" class=\"\n          w-full\n          bg-white\n          h-10\n          px-5\n          pr-10\n          rounded-full\n          text-sm\n          focus:outline-none\n          hover:shadow-xl\n          duration-200\n        \" />\n      <div class=\"absolute right-0 top-0 mt-3 mr-4\">\n        <svg class=\"h-4 w-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 56.966 56.966\"\n          style=\"enable-background: new 0 0 56.966 56.966\" xml:space=\"preserve\" width=\"512px\" height=\"512px\">\n          <path\n            d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\" />\n        </svg>\n      </div>\n    </div>\n    <div class=\"flex justify-evenly align-center mb-4 mt-4\">\n      <div class=\"h5 text-center font-semibold\">\n        Found {{ foundResults }} results\n      </div>\n      <div class=\"relative\">\n        <button (click)=\"dropdownOpen = !dropdownOpen\" class=\"relative hover:text-blue-500 duration-200 font-semibold\">\n          Show per page: {{ showPerPage }}\n          <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" [ngClass]=\"{\n              'rotate-180': dropdownOpen,\n              'rotate-0': !dropdownOpen\n            }\" class=\"\n              inline\n              w-4\n              h-4\n              mt-1\n              transition-transform\n              duration-200\n              transform\n              md:-mt-1\n              rotate-0\n            \">\n            <path fill-rule=\"evenodd\"\n              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n              clip-rule=\"evenodd\"></path>\n          </svg>\n        </button>\n\n        <div *ngIf=\"dropdownOpen\" (click)=\"dropdownOpen = false\" class=\"fixed inset-0 h-full w-full z-10\"></div>\n\n        <div *ngIf=\"dropdownOpen\" class=\"\n            absolute\n            right-0\n            mt-2\n            bg-white\n            rounded-md\n            overflow-hidden\n            shadow-xl\n            z-20\n          \">\n          <button *ngFor=\"let option of showPerPageOptions\" (click)=\"changePageSize(option)\" [ngClass]=\"{\n              'bg-purple-500 text-white': option === showPerPage,\n              'hover:bg-gray-200': option !== showPerPage\n            }\" type=\"button\" class=\"block px-4 py-2 w-full text-sm border-b duration-200\">\n            {{ option }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"\n      grid\n      sm:grid-cols-2\n      lg:grid-cols-3\n      xl:grids-cols-4\n      grid-cols-1\n      gap-4\n      px-3\n    \">\n    <app-buy-order-item *ngFor=\"let order of currentPageItems; let i = index\" [orderItem]=\"order\"\n      [currencySign]=\"currencySign\" (itemRemoved)=\"removeItem(i)\"></app-buy-order-item>\n  </div>\n  <app-pagination #pagination [items]=\"allOrdersForDisplay\" [pageSize]=\"showPerPage\"\n    (changePage)=\"onChangePage($event)\"></app-pagination>\n</div>","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { BehaviorSubject, of, Subject } from 'rxjs';\r\nimport { concatMap, debounceTime, takeUntil } from 'rxjs/operators';\r\nimport { PaginationComponent } from '../../../../../core/pagination/pagination.component';\r\nimport { BuyOrder } from '../../../../../models/buy-order.model';\r\nimport { OptionsFacade } from '../../../options.facade';\r\n\r\n@Component({\r\n  selector: 'app-planned-orders',\r\n  templateUrl: './planned-orders.component.html',\r\n  styleUrls: ['./planned-orders.component.scss']\r\n})\r\nexport class PlannedOrdersComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Model for search text input binding\r\n   *\r\n   * @type {string}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  searchText: string;\r\n  /**\r\n   * Amount of found results after filtration\r\n   *\r\n   * @type {number}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  foundResults: number;\r\n  /**\r\n   * List with all orders for display. Used for pagination\r\n   *\r\n   * @type {BuyOrder[]}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  allOrdersForDisplay: BuyOrder[] = [];\r\n  /**\r\n   * List with current page items for display (from pagination)\r\n   *\r\n   * @type {BuyOrder[]}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  currentPageItems: BuyOrder[] = [];\r\n  /**\r\n   * Flag indicates if show per page option dropdown is opened\r\n   *\r\n   * @type {boolean}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  dropdownOpen: boolean = false;\r\n  /**\r\n   * Number of items per page\r\n   *\r\n   * @type {number}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  showPerPage: number = 18;\r\n  /**\r\n   * Available options of page size that user can select from\r\n   *\r\n   * @type {number[]}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  showPerPageOptions: number[] = [9, 18, 27, 36];\r\n  /**\r\n   * Currency sign for visual display\r\n   *\r\n   * @type {string}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  currencySign: string;\r\n  /**\r\n   * Reference to pagination component which holds many useful information\r\n   *\r\n   * @private\r\n   * @type {PaginationComponent}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  @ViewChild('pagination') private pagination: PaginationComponent;\r\n  /**\r\n   * Behavior Subject that receives search text value to filter results\r\n   *\r\n   * @private\r\n   * @type {BehaviorSubject<string>}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  private searchSubject: BehaviorSubject<string> = new BehaviorSubject('');\r\n  /**\r\n   * List with planned orders for display\r\n   *\r\n   * @private\r\n   * @type {BuyOrder[]}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  private plannedOrders: BuyOrder[] = [];\r\n  /**\r\n   * Subject that is responsible for unsubscribing when component gets destroyed\r\n   *\r\n   * @private\r\n   * @type {Subject<boolean>}\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  private destroy$: Subject<boolean> = new Subject();\r\n  constructor(\r\n    private optionsFacade: OptionsFacade,\r\n    private cdr: ChangeDetectorRef,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.optionsFacade.getPlannedOrders(true)\r\n      .subscribe(orders => {\r\n        this.plannedOrders = orders;\r\n        // Getting currency sign for display if we have at least one planned order because\r\n        // currency id is stored on planned order level\r\n        if (this.plannedOrders.length) {\r\n          // Finding necessary currency from stored list\r\n          // ...and using its symbol\r\n          this.currencySign = this.optionsFacade.getCurrency()?.symbol ?? '';\r\n        }\r\n      });\r\n\r\n    // Subscribing to search input changes\r\n    this.searchSubject.asObservable()\r\n      .pipe(\r\n        debounceTime(200),\r\n        concatMap(searchText => {\r\n          // Filtering results and returning filtered array\r\n          return of(this.plannedOrders.filter(order => order.itemName\r\n            .toLowerCase()\r\n            .includes(searchText.toLowerCase())\r\n          )\r\n          )\r\n        }),\r\n        takeUntil(this.destroy$)\r\n        // tap(results => this.foundResults = results.length),\r\n      )\r\n      .subscribe(filteredResults => {\r\n        // Storing amount of found results just for display\r\n        this.foundResults = filteredResults.length;\r\n        // Storing results for display\r\n        this.allOrdersForDisplay = filteredResults;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Completing subscriptions\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  search(searchText: string) {\r\n    this.searchSubject.next(searchText);\r\n  }\r\n\r\n  /**\r\n   * Method fills planned buy order list for display after page changed\r\n   *\r\n   * @param {BuyOrder[]} pageOfItems New items for displayy\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  onChangePage(pageOfItems: BuyOrder[]) {\r\n    // Setting items that will be displayed\r\n    this.currentPageItems = pageOfItems;\r\n  }\r\n\r\n  changePageSize(size: number) {\r\n    this.showPerPage = size;\r\n  }\r\n\r\n  /**\r\n   * Tracks order by ID. Used for performance to minimize rendering\r\n   *\r\n   * @param {number} index Item index\r\n   * @param {BuyOrder} item Item of current iteration\r\n   * @return {*} Returns id of current iteration item\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  orderById(index: number, item: BuyOrder) {\r\n    return item.id;\r\n  }\r\n\r\n  /**\r\n   * Method removes planned order from list\r\n   *\r\n   * @param {number} currentPageIndex Index of element for removal on current page. Its not index in all list\r\n   * @memberof PlannedOrdersComponent\r\n   */\r\n  removeItem(currentPageIndex: number) {\r\n    // Getting index of item to remove among all items, not on current page\r\n    const indexForRemoval = this.pagination.pager.startIndex + currentPageIndex;\r\n    // Removing element from list of all items so after page change it won't appear again\r\n    // NOTE: We are removing from two lists because one remains as original and the other one is\r\n    // used for display and filtering\r\n    this.pagination.items.splice(indexForRemoval, 1);\r\n    this.plannedOrders.splice(indexForRemoval, 1);\r\n    // Removing element from current page so it disappears\r\n    this.currentPageItems.splice(currentPageIndex, 1);\r\n\r\n    // Decreasing found result counter since element was removed\r\n    this.foundResults--;\r\n\r\n    // If there are no more items on current page then going back to previous page.\r\n    // If user is currently on first page then it will trigger pagination recreate anyways\r\n    if (!this.currentPageItems.length) {\r\n      this.pagination.setPage(this.pagination.pager.currentPage - 1)\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PaginationModule } from '../../../../../core/pagination/pagination.module';\nimport { BuyOrderItemComponent } from './buy-order-item/buy-order-item.component';\nimport { PlannedOrdersRoutingModule } from './planned-order-routing.module';\nimport { PlannedOrdersComponent } from './planned-orders.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PlannedOrdersRoutingModule,\n    FormsModule,\n    PaginationModule,\n  ],\n  declarations: [PlannedOrdersComponent, BuyOrderItemComponent]\n})\nexport class PlannedOrdersModule { }\n","export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n//# sourceMappingURL=Scheduler.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n//# sourceMappingURL=Action.js.map","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n//# sourceMappingURL=AsyncAction.js.map","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsyncScheduler.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n//# sourceMappingURL=async.js.map"]}