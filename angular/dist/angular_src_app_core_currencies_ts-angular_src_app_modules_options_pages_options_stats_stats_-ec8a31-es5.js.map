{"version":3,"sources":["webpack:///angular/src/app/core/currencies.ts","webpack:///angular/src/app/models/stats.model.ts","webpack:///angular/src/app/modules/options/pages/options/stats/stats-routing.module.ts","webpack:///angular/src/app/modules/options/pages/options/stats/stats.component.html","webpack:///angular/src/app/modules/options/pages/options/stats/stats.component.ts","webpack:///angular/src/app/modules/options/pages/options/stats/stats.module.ts"],"names":["CURRENCY","PlannedOrderStats","totalOrders","totalAmount","totalPrice","topItemsByAmount","topItemsByPrice","topItemsByTotalPrice","routes","path","component","StatsComponent","StatsRoutingModule","RouterModule","optionsFacade","areStatsReady","stats","destroy$","Subject","getPlannedOrders","pipe","takeUntil","subscribe","orders","currentCurrency","getCurrency","createStats","next","complete","length","order","amount","price","sort","a","b","splice","toFixed","StatsModule","CommonModule"],"mappings":"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","file":"angular_src_app_core_currencies_ts-angular_src_app_modules_options_pages_options_stats_stats_-ec8a31-es5.js","sourcesContent":["import { Currency } from '../models/base.model';\r\n\r\nexport const CURRENCY: Currency[] = [\r\n    {\r\n        'code': 'USD',\r\n        'currencyId': 1,\r\n        'symbol': '$'\r\n    },\r\n    {\r\n        'code': 'GBP',\r\n        'currencyId': 2,\r\n        'symbol': '£'\r\n    },\r\n    {\r\n        'code': 'EUR',\r\n        'currencyId': 3,\r\n        'symbol': '€'\r\n    },\r\n    {\r\n        'code': 'CHF',\r\n        'currencyId': 4,\r\n        'symbol': 'CHF'\r\n    },\r\n    {\r\n        'code': 'RUB',\r\n        'currencyId': 5,\r\n        'symbol': 'pуб.'\r\n    },\r\n    {\r\n        'code': 'BRL',\r\n        'currencyId': 7,\r\n        'symbol': 'R$'\r\n    },\r\n    {\r\n        'code': 'JPY',\r\n        'currencyId': 8,\r\n        'symbol': '¥'\r\n    },\r\n    {\r\n        'code': 'NOK',\r\n        'currencyId': 9,\r\n        'symbol': 'kr'\r\n    },\r\n    {\r\n        'code': 'IDR',\r\n        'currencyId': 10,\r\n        'symbol': 'Rp'\r\n    },\r\n    {\r\n        'code': 'MYR',\r\n        'currencyId': 11,\r\n        'symbol': 'RM'\r\n    },\r\n    {\r\n        'code': 'PHP',\r\n        'currencyId': 12,\r\n        'symbol': 'P'\r\n    },\r\n    {\r\n        'code': 'SGD',\r\n        'currencyId': 13,\r\n        'symbol': 'S$'\r\n    },\r\n    {\r\n        'code': 'THB',\r\n        'currencyId': 14,\r\n        'symbol': '฿'\r\n    },\r\n    {\r\n        'code': 'VND',\r\n        'currencyId': 15,\r\n        'symbol': '₫'\r\n    },\r\n    {\r\n        'code': 'KRW',\r\n        'currencyId': 16,\r\n        'symbol': '₩'\r\n    },\r\n    {\r\n        'code': 'TRY',\r\n        'currencyId': 17,\r\n        'symbol': 'TL'\r\n    },\r\n    {\r\n        'code': 'UAH',\r\n        'currencyId': 18,\r\n        'symbol': '₴'\r\n    },\r\n    {\r\n        'code': 'MXN',\r\n        'currencyId': 19,\r\n        'symbol': 'Mex$'\r\n    },\r\n    {\r\n        'code': 'CAD',\r\n        'currencyId': 20,\r\n        'symbol': 'CDN$'\r\n    },\r\n    {\r\n        'code': 'AUD',\r\n        'currencyId': 21,\r\n        'symbol': 'A$'\r\n    },\r\n    {\r\n        'code': 'NZD',\r\n        'currencyId': 22,\r\n        'symbol': 'NZ$'\r\n    },\r\n    {\r\n        'code': 'PLN',\r\n        'currencyId': 6,\r\n        'symbol': 'zł'\r\n    },\r\n    {\r\n        'code': 'CNY',\r\n        'currencyId': 23,\r\n        'symbol': '¥'\r\n    },\r\n    {\r\n        'code': 'INR',\r\n        'currencyId': 24,\r\n        'symbol': '₹'\r\n    },\r\n    {\r\n        'code': 'CLP',\r\n        'currencyId': 25,\r\n        'symbol': 'CLP$'\r\n    },\r\n    {\r\n        'code': 'PEN',\r\n        'currencyId': 26,\r\n        'symbol': 'S/.'\r\n    },\r\n    {\r\n        'code': 'COP',\r\n        'currencyId': 27,\r\n        'symbol': 'COL$'\r\n    },\r\n    {\r\n        'code': 'ZAR',\r\n        'currencyId': 28,\r\n        'symbol': 'R'\r\n    },\r\n    {\r\n        'code': 'HKD',\r\n        'currencyId': 29,\r\n        'symbol': 'HK$'\r\n    },\r\n    {\r\n        'code': 'TWD',\r\n        'currencyId': 30,\r\n        'symbol': 'NT$'\r\n    },\r\n    {\r\n        'code': 'SAR',\r\n        'currencyId': 31,\r\n        'symbol': 'SR'\r\n    },\r\n    {\r\n        'code': 'AED',\r\n        'currencyId': 32,\r\n        'symbol': 'AED'\r\n    },\r\n    {\r\n        'code': 'SEK',\r\n        'currencyId': 33,\r\n        'symbol': 'kr'\r\n    },\r\n    {\r\n        'code': 'ARS',\r\n        'currencyId': 34,\r\n        'symbol': 'ARS$'\r\n    },\r\n    {\r\n        'code': 'ILS',\r\n        'currencyId': 35,\r\n        'symbol': '₪'\r\n    },\r\n    {\r\n        'code': 'BYN',\r\n        'currencyId': 36,\r\n        'symbol': 'Br'\r\n    },\r\n    {\r\n        'code': 'KZT',\r\n        'currencyId': 37,\r\n        'symbol': '₸'\r\n    },\r\n    {\r\n        'code': 'KWD',\r\n        'currencyId': 38,\r\n        'symbol': 'KD'\r\n    },\r\n    {\r\n        'code': 'QAR',\r\n        'currencyId': 39,\r\n        'symbol': 'QR'\r\n    },\r\n    {\r\n        'code': 'CRC',\r\n        'currencyId': 40,\r\n        'symbol': '₡'\r\n    },\r\n    {\r\n        'code': 'UYU',\r\n        'currencyId': 41,\r\n        'symbol': '$U'\r\n    },\r\n    {\r\n        'code': 'BGN',\r\n        'currencyId': 42,\r\n        'symbol': 'лв'\r\n    },\r\n    {\r\n        'code': 'HRK',\r\n        'currencyId': 43,\r\n        'symbol': 'kn'\r\n    },\r\n    {\r\n        'code': 'CZK',\r\n        'currencyId': 44,\r\n        'symbol': 'Kč'\r\n    },\r\n    {\r\n        'code': 'DKK',\r\n        'currencyId': 45,\r\n        'symbol': 'kr.'\r\n    },\r\n    {\r\n        'code': 'HUF',\r\n        'currencyId': 46,\r\n        'symbol': 'Ft'\r\n    },\r\n    {\r\n        'code': 'RON',\r\n        'currencyId': 47,\r\n        'symbol': 'lei'\r\n    },\r\n    {\r\n        'code': 'RMB',\r\n        'currencyId': 9000,\r\n        'symbol': '刀币'\r\n    },\r\n    {\r\n        'code': 'NXP',\r\n        'currencyId': 9001,\r\n        'symbol': '원'\r\n    }\r\n]","import { BuyOrder } from \"./buy-order.model\";\r\n\r\nexport class PlannedOrderStats {\r\n    totalOrders: number = 0;\r\n    totalAmount: number = 0;\r\n    totalPrice: number = 0;\r\n    topItemsByAmount: BuyOrder[] = [];\r\n    topItemsByPrice: BuyOrder[] = [];\r\n    topItemsByTotalPrice: BuyOrder[] = [];\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { StatsComponent } from './stats.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StatsComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class StatsRoutingModule { }\r\n","<ng-container *ngIf=\"areStatsReady; else loadingTmpl\">\n  <ng-container *ngIf=\"stats.totalOrders > 0; else noOrdersTmpl\">\n    <div class=\"flex flex-col justify-between lg:flex-row\">\n      <div class=\"container mx-auto mb-10\">\n        <div\n          class=\"w-72 bg-white max-w-xs mx-auto rounded-lg shadow-md hover:shadow-lg transition duration-500 transform hover:scale-200\">\n          <div class=\"py-5 bg-red-400 flex items-center justify-between rounded-t-lg\">\n            <p class=\"mr-0 text-white text-lg pl-5\">Planned orders</p>\n          </div>\n          <div class=\"flex justify-center w-full px-5 pt-3 text-sm text-gray-400\">\n            <p class=\"text-center\">Total added</p>\n          </div>\n          <p class=\"pb-4 text-3xl text-center\">{{stats.totalOrders}}</p>\n        </div>\n      </div>\n\n      <div class=\"container mx-auto mb-10\">\n        <div\n          class=\"w-72 bg-white max-w-xs mx-auto rounded-lg shadow-md hover:shadow-lg transition duration-500 transform hover:scale-100\">\n          <div class=\"py-5 bg-blue-400 flex items-center justify-between rounded-t-lg\">\n            <p class=\"mr-0 text-white text-lg pl-5\">Planned amount</p>\n          </div>\n          <div class=\"flex justify-center w-full px-5 pt-3 text-sm text-gray-400\">\n            <p class=\"text-center\">Combined amount</p>\n          </div>\n          <p class=\"pb-4 text-3xl text-center\">{{stats.totalAmount}}</p>\n        </div>\n      </div>\n\n      <div class=\"container mx-auto mb-10\">\n        <div\n          class=\"w-72 bg-white max-w-xs mx-auto rounded-lg shadow-md hover:shadow-lg transition duration-500 transform hover:scale-100\">\n          <div class=\"py-5 bg-purple-400 flex items-center justify-between rounded-t-lg\">\n            <p class=\"mr-0 text-white text-lg pl-5\">Planned expensees</p>\n          </div>\n          <div class=\"flex justify-center w-full px-5 pt-3 text-sm text-gray-400\">\n            <p class=\"text-center\">Combined required</p>\n          </div>\n          <p class=\"pb-4 text-3xl text-center\">{{stats.totalPrice |\n            currency:currentCurrency.code:'symbol-narrow':'1.2-2'}}</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-10 p-5\">\n      <div class=\"container mx-auto bg-white shadow-xl\">\n        <div class=\"w-11/12 mx-auto\">\n          <div class=\"bg-white mb-6\">\n            <div class=\"py-4 text-xl font-bold w-full text-center\">\n              TOP 5 Highest amount\n            </div>\n            <table class=\"text-left w-full border-collapse\">\n              <thead>\n                <tr>\n                  <th class=\"py-4 px-6 bg-indigo-500 font-bold uppercase text-sm text-white border-b border-grey-light\">\n                    ITEM</th>\n                  <th\n                    class=\"py-4 px-6 text-center bg-indigo-500 font-bold uppercase text-sm text-white border-b border-grey-light\">\n                    AMOUNT</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"hover:bg-gray-200 transition duration-200\" *ngFor=\"let order of stats.topItemsByAmount\">\n                  <td class=\"py-4 px-6 border-b border-grey-light\">{{order.itemName}}</td>\n                  <td class=\"py-4 px-6 text-center border-b border-grey-light\">\n                    {{order.amount}}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"container mx-auto bg-white shadow-xl\">\n        <div class=\"w-11/12 mx-auto\">\n          <div class=\"bg-white mb-6\">\n            <div class=\"py-4 text-xl font-bold w-full text-center\">\n              TOP 5 Highest price per piece\n            </div>\n            <table class=\"text-left w-full border-collapse\">\n              <thead>\n                <tr>\n                  <th class=\"py-4 px-6 bg-indigo-500 font-bold uppercase text-sm text-white border-b border-grey-light\">\n                    ITEM</th>\n                  <th\n                    class=\"py-4 px-6 text-center bg-indigo-500 font-bold uppercase text-sm text-white border-b border-grey-light\">\n                    BUY PRICE</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"hover:bg-gray-200 transition duration-200\" *ngFor=\"let order of stats.topItemsByPrice\">\n                  <td class=\"py-4 px-6 border-b border-grey-light\">{{order.itemName}}</td>\n                  <td class=\"py-4 px-6 text-center border-b border-grey-light\">\n                    {{order.price |\n                    currency:currentCurrency.code:'symbol-narrow':'1.2-2'}}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"container mx-auto bg-white shadow-xl\">\n        <div class=\"w-11/12 mx-auto\">\n          <div class=\"bg-white mb-6\">\n            <div class=\"py-4 text-xl font-bold w-full text-center\">\n              TOP 5 Most expensive (amount x price)\n            </div>\n            <table class=\"text-left w-full border-collapse\">\n              <thead>\n                <tr>\n                  <th class=\"py-4 px-6 bg-indigo-500 font-bold uppercase text-sm text-white border-b border-grey-light\">\n                    ITEM</th>\n                  <th\n                    class=\"py-4 px-6 text-center bg-indigo-500 font-bold uppercase text-sm text-white border-b border-grey-light\">\n                    TOTAL PRICE\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"hover:bg-gray-200 transition duration-200\" *ngFor=\"let order of stats.topItemsByTotalPrice\">\n                  <td class=\"py-4 px-6 border-b border-grey-light\">{{order.itemName}}</td>\n                  <td class=\"py-4 px-6 text-center border-b border-grey-light\">\n                    {{ (order.amount * order.price) |\n                    currency:currentCurrency.code:'symbol-narrow':'1.2-2' }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingTmpl>\n  <div class=\"lds-ripple\">\n    <div></div>\n    <div></div>\n  </div>\n</ng-template>\n\n<ng-template #noOrdersTmpl>\n  <div class=\"flex flex-col justify-between lg:flex-row\">\n    <div class=\"container mx-auto mb-10 text-center\">\n      <h1 class=\"text-3xl\">Nothing added = Nothing to show</h1>\n      <h3 class=\"text-gray-400 text-lg\">\n        To see stats you need to add planned buy orders!\n      </h3>\n    </div>\n  </div>\n</ng-template>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Currency } from '../../../../../models/base.model';\nimport { BuyOrder } from '../../../../../models/buy-order.model';\nimport { PlannedOrderStats } from '../../../../../models/stats.model';\nimport { OptionsFacade } from '../../../options.facade';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit, OnDestroy {\n  /**\n   * Flag indicates if stats are ready for display\n   *\n   * @type {boolean}\n   * @memberof StatsComponent\n   */\n  areStatsReady: boolean = false;\n  /**\n   * Stats for display\n   *\n   * @type {PlannedOrderStats}\n   * @memberof StatsComponent\n   */\n  stats: PlannedOrderStats = new PlannedOrderStats();\n  currentCurrency: Currency;\n  /**\n   * Subject that is responsible for unsubscribing when component gets destroyed\n   *\n   * @private\n   * @type {Subject<boolean>}\n   * @memberof StatsComponent\n   */\n  private destroy$: Subject<boolean> = new Subject();\n  constructor(\n    private optionsFacade: OptionsFacade,\n  ) { }\n\n  ngOnInit() {\n    this.optionsFacade.getPlannedOrders()\n      .pipe(\n        takeUntil(this.destroy$)\n      )\n      .subscribe(orders => {\n        this.currentCurrency = this.optionsFacade.getCurrency();\n        this.createStats(orders);\n      })\n  }\n\n  ngOnDestroy(): void {\n    // Completing subscriptions\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  private createStats(orders: BuyOrder[]) {\n    this.stats.totalOrders = orders.length;\n\n    for (const order of orders) {\n      this.stats.totalAmount += order.amount;\n      this.stats.totalPrice += order.amount * order.price;\n    }\n\n    // Getting top items and taking only necessary amount of items for display (5)\n    this.stats.topItemsByAmount = [...orders].sort((a, b) => b.amount - a.amount).splice(0, 5);\n    this.stats.topItemsByPrice = [...orders].sort((a, b) => b.price - a.price).splice(0, 5);\n    this.stats.topItemsByTotalPrice = [...orders].sort((a, b) => (b.price * b.amount) - (a.price * a.amount)).splice(0, 5);\n\n    // Fixing floating for price (Taking only 2 digits after comma)\n    this.stats.totalPrice = +this.stats.totalPrice.toFixed(2);\n\n    this.areStatsReady = true;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { StatsRoutingModule } from './stats-routing.module';\nimport { StatsComponent } from './stats.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StatsRoutingModule,\n  ],\n  declarations: [StatsComponent]\n})\nexport class StatsModule { }\n"]}