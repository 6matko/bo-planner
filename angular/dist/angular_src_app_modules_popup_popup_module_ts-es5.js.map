{"version":3,"sources":["webpack:///angular/src/app/models/base.model.ts","webpack:///angular/src/app/models/buy-order.model.ts","webpack:///angular/src/app/modules/popup/pages/popup/popup.component.html","webpack:///angular/src/app/modules/popup/pages/popup/popup.component.ts","webpack:///angular/src/app/modules/popup/popup-routing.module.ts","webpack:///angular/src/app/modules/popup/popup.module.ts","webpack:///node_modules/rxjs/_esm2015/internal/AsyncSubject.js","webpack:///node_modules/rxjs/_esm2015/internal/observable/bindCallback.js","webpack:///node_modules/rxjs/_esm2015/internal/observable/throwError.js"],"names":["BaseEntity","ChromeCommunicationMessage","Currency","BuyOrder","data","Object","assign","updated","created","Date","PopupComponent","tabId","cdr","formBuilder","dbService","isManualAdding","isManualSuccess","currencies","CURRENCY","error","destroy$","Subject","createForm","initInfo","next","complete","itemInfo","updateBuyOrder","createBuyOrder","chrome","tabs","update","url","window","close","runtime","openOptionsPage","sendMessage","type","price","amount","bindCallback","query","bind","pipe","mergeMap","map","tab","id","switchMap","lastError","undefined","getSavedInfoFromDB","itemFromDB","takeUntil","subscribe","result","openPlaceBuyOrderWindow","boForm","get","setValidators","Validators","getByIndex","itemName","boEntity","info","of","getItemInfoFromPage","pageUrl","includes","patchValue","detectChanges","newBOEntity","value","item","throwError","add","reset","markAsUntouched","updateItemInfo","err","updatedBuyOrder","updatedBOEntity","results","group","appId","currencyId","TAB_ID","openPlaceBuyOrderWindowOnAllTabs","goToPlannedList","routes","path","pathMatch","component","PopupRoutingModule","RouterModule","PopupModule","CommonModule","ReactiveFormsModule","AsyncSubject","arguments","hasNext","hasCompleted","subscriber","hasError","thrownError","Subscription","callbackFunc","resultSelector","scheduler","isScheduler","args","isArray","context","subject","params","Observable","handler","innerArgs","length","apply","canReportError","console","warn","state","schedule","dispatch","self","dispatchNext","dispatchError"],"mappings":"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","file":"angular_src_app_modules_popup_popup_module_ts-es5.js","sourcesContent":["export class BaseEntity {\r\n    id: number;\r\n    created: Date;\r\n    updated: Date;\r\n}\r\n\r\nexport class ChromeCommunicationMessage<T = any> {\r\n    type: string;\r\n    data: T;\r\n}\r\n\r\nexport class Currency {\r\n    code: string;\r\n    currencyId: number;\r\n    symbol: string;\r\n}","import { BaseEntity } from './base.model';\r\n\r\nexport class BuyOrder extends BaseEntity {\r\n    /**\r\n     * Steam Community Market full item name\r\n     *\r\n     * @type {string}\r\n     * @memberof BuyOrder\r\n     */\r\n    itemName: string;\r\n    /**\r\n     * Page URL\r\n     *\r\n     * @type {string}\r\n     * @memberof BuyOrder\r\n     */\r\n    pageUrl?: string;\r\n    /**\r\n     * Buy order price\r\n     *\r\n     * @type {number}\r\n     * @memberof BuyOrder\r\n     */\r\n    price: number;\r\n    /**\r\n     * Buy order amount\r\n     *\r\n     * @type {number}\r\n     * @memberof BuyOrder\r\n     */\r\n    amount: number;\r\n    /**\r\n     * App id of SCM item\r\n     *\r\n     * @type {number}\r\n     * @memberof BuyOrder\r\n     */\r\n    appId: number;\r\n    /**\r\n     * Id of currency\r\n     *\r\n     * @type {number}\r\n     * @memberof BuyOrder\r\n     */\r\n    currencyId: number;\r\n    constructor(data: BuyOrder) {\r\n        super();\r\n        // Assigning data to current instance\r\n        Object.assign(this, data);\r\n        // If current buy order was previously created then setting current date\r\n        // as date when it was updated last time. Otherwise using date when it was created\r\n        // as initial value\r\n        this.updated = this.created ? new Date() : (this.created || new Date());\r\n        // Setting creation date\r\n        this.created = new Date();\r\n    }\r\n}\r\n","<div id=\"page-wrapper\">\n  <h3\n    class=\"title uppercase text-xl mb-3 mx-auto text-center font-semibold pt-0 tracking-widest text-gray-900 rounded-lg dark-mode:text-white focus:outline-none focus:shadow-outline\">\n    Buy order planner\n  </h3>\n\n  <ng-container *ngIf=\"itemInfo || isManualAdding; else goToSCMListingTmpl\">\n    <form\n      class=\"w-100 bg-white px-4 pt-4\"\n      [formGroup]=\"boForm\"\n      (ngSubmit)=\"save()\">\n      <div class=\"mb-4\">\n        <label\n          for=\"itemName\"\n          class=\"block text-gray-500 font-medium text-sm mb-2\"\n          >Full item name</label\n        >\n        <input\n          [ngClass]=\"{\n            'ring-2 ring-red-600':\n              boForm.get('itemName').touched && boForm.get('itemName').invalid\n          }\"\n          formControlName=\"itemName\"\n          (focus)=\"clearSuccessMessage()\"\n          autofocus\n          name=\"itemName\"\n          type=\"text\"\n          placeholder=\"Enter item name\"\n          class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" />\n      </div>\n\n      <div class=\"grid grid-cols-2 gap-4\">\n        <div>\n          <label\n            for=\"boPrice\"\n            class=\"block text-gray-500 font-medium text-sm mb-2\"\n            >Price</label\n          >\n          <input\n            [ngClass]=\"{\n              'ring-2 ring-red-600':\n                boForm.get('price').touched && boForm.get('price').invalid\n            }\"\n            formControlName=\"price\"\n            name=\"boPrice\"\n            type=\"number\"\n            min=\"0\"\n            step=\"0.01\"\n            placeholder=\"Buy order price\"\n            class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" />\n        </div>\n        <div>\n          <label\n            for=\"boAmount\"\n            class=\"block text-gray-500 font-medium text-sm mb-2\"\n            >Amount to buy</label\n          >\n          <input\n            [ngClass]=\"{\n              'ring-2 ring-red-600':\n                boForm.get('amount').touched && boForm.get('amount').invalid\n            }\"\n            formControlName=\"amount\"\n            name=\"boAmount\"\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            placeholder=\"Amount to buy\"\n            class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" />\n        </div>\n      </div>\n\n      <div class=\"grid grid-cols-2 gap-4 mt-4\" *ngIf=\"isManualAdding\">\n        <div>\n          <label\n            for=\"appId\"\n            class=\"block text-gray-500 font-medium text-sm mb-2\"\n            >App ID</label\n          >\n          <input\n            [ngClass]=\"{\n              'ring-2 ring-red-600':\n                boForm.get('appId').touched && boForm.get('appId').invalid\n            }\"\n            formControlName=\"appId\"\n            name=\"appId\"\n            type=\"number\"\n            min=\"0\"\n            step=\"1\"\n            placeholder=\"Game app ID\"\n            class=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" />\n        </div>\n        <div>\n          <label\n            for=\"currency\"\n            class=\"block text-gray-500 font-medium text-sm mb-2\"\n            >Currency</label\n          >\n          <div class=\"flex justify-center\">\n            <div class=\"w-full\">\n              <select\n                [ngClass]=\"{\n                  'ring-2 ring-red-600':\n                    boForm.get('currencyId').touched &&\n                    boForm.get('currencyId').invalid\n                }\"\n                formControlName=\"currencyId\"\n                class=\"form-select appearance-none bg-gray-200 border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                aria-label=\"Currency select\">\n                <option\n                  *ngFor=\"let currency of currencies\"\n                  [value]=\"currency.currencyId\">\n                  {{ currency.code }}\n                  <span *ngIf=\"currency.symbol\">({{ currency.symbol }})</span>\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"\">\n        <button\n          [disabled]=\"boForm.invalid\"\n          [ngClass]=\"{ 'opacity-50 cursor-not-allowed': boForm.invalid }\"\n          type=\"submit\"\n          class=\"w-3/5 block mx-auto shadow transition duration-300 ease-in-out bg-purple-800 hover:bg-purple-900 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded mt-4\">\n          Save\n        </button>\n      </div>\n    </form>\n\n    <div\n      class=\"m-4 mt-0 pt-8\"\n      *ngIf=\"\n        !isManualAdding &&\n        (!itemInfo?.activeBOPrice || !itemInfo?.activeBOAmount)\n      \">\n      <button\n        (click)=\"openPlaceBuyOrderWindow()\"\n        type=\"button\"\n        class=\"w-full block mx-auto shadow transition duration-300 ease-in-out bg-green-500 hover:bg-green-600 focus:shadow-outline focus:outline-none text-white font-bold text-xl py-2 px-4 rounded mb-4\">\n        PLACE BUY ORDER\n      </button>\n    </div>\n\n    <div\n      *ngIf=\"itemInfo?.activeBOPrice && itemInfo?.activeBOAmount\"\n      class=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mt-6 mb-3\"\n      role=\"alert\">\n      <div class=\"flex justify-between font-bold text-sm\">\n        <p>Active buy order</p>\n        <p>\n          {{ itemInfo?.activeBOAmount }} x {{ itemInfo?.activeBOPriceString }}\n        </p>\n      </div>\n      <p>You already have an active buy order for this item.</p>\n    </div>\n    <div\n      *ngIf=\"isManualAdding && isManualSuccess\"\n      class=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mt-6 mb-3\"\n      role=\"alert\">\n      <div class=\"flex justify-between font-bold text-md\">\n        <p>Item was added</p>\n      </div>\n    </div>\n    <div\n      *ngIf=\"error\"\n      class=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mt-6 mb-3\"\n      role=\"alert\">\n      <div class=\"flex justify-between font-bold text-md\">\n        <p>{{ error }}</p>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template #goToSCMListingTmpl>\n    <div\n      class=\"bg-green-50 border-t-4 border-green-400 rounded-b text-green-600 px-4 py-3 shadow-md\"\n      role=\"alert\">\n      <div class=\"flex\">\n        <div class=\"py-1\">\n          <svg\n            class=\"fill-current h-6 w-6 text-green-400 mr-4\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\">\n            <path\n              d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93\n              17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9\n              11V9h2v6H9v-4zm0-6h2v2H9V5z\" />\n          </svg>\n        </div>\n        <div class=\"flex items-center\">\n          <p class=\"font-bold text-sm\">\n            This extension works only on SCM listing page.\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"w-full mb-5\">\n      <button\n        (click)=\"goToSCM()\"\n        type=\"button\"\n        rel=\"nofollow\"\n        class=\"w-3/5 block text-center mx-auto shadow transition duration-300 ease-in-out bg-yellow-600 hover:bg-yellow-700 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded mt-4\">\n        Go to market page\n      </button>\n    </div>\n\n    <div class=\"relative flex items-center\">\n      <div class=\"flex-grow border-t border-gray-400\"></div>\n      <span class=\"flex-shrink mx-4\">OR</span>\n      <div class=\"flex-grow border-t border-gray-400\"></div>\n    </div>\n\n    <div class=\"w-full mb-5\">\n      <button\n        (click)=\"openManualAdd()\"\n        type=\"button\"\n        rel=\"nofollow\"\n        class=\"w-3/5 block text-center mx-auto shadow transition duration-300 ease-in-out bg-green-500 hover:bg-green-600 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded mt-4\">\n        Manually add item information\n      </button>\n    </div>\n  </ng-template>\n\n  <p class=\"mb-2\" *ngIf=\"itemInfo?.updated\">\n    Last update: {{ itemInfo.updated | date: 'medium' }}\n  </p>\n\n  <div\n    class=\"bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 mt-6 mb-3\"\n    role=\"alert\">\n    <div class=\"flex justify-between\">\n      <div>\n        <p class=\"font-bold text-sm\">Place buy order on all pages</p>\n        <p>\n          This action will open \"Place Buy Order\" window on all opened SCM\n          pages.\n        </p>\n      </div>\n      <button\n        (click)=\"openPlaceBuyOrderWindowOnAllTabs()\"\n        type=\"button\"\n        class=\"ml-10 shadow transition duration-300 ease-in-out bg-blue-700 hover:bg-blue-900 focus:shadow-outline focus:outline-none text-white font-bold text-sm py-2 px-4 rounded\">\n        OPEN\n      </button>\n    </div>\n  </div>\n\n  <div class=\"flex justify-between items-center w-full\">\n    <button\n      type=\"button\"\n      class=\"flex text-black hover:text-blue-900 duration-200 background-transparent font-bold uppercase px-0 py-1 text-xs outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        class=\"mr-1\"\n        viewBox=\"0 0 16 16\">\n        <path\n          d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47\n            7.59.4.07.55-.17.55-.38\n            0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01\n            1.08.58 1.23.82.72 1.21 1.87.87\n            2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95\n            0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21\n            2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82\n            2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87\n            3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0\n            .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\" />\n      </svg>\n      <a\n        href=\"https://github.com/6matko/bo-planner\"\n        target=\"_blank\"\n        class=\"hover:text-blue-900 duration-200\"\n        rel=\"noreferrer nofollow\">\n        Github\n      </a>\n    </button>\n    <small\n      >by\n      <a\n        href=\"https://steamcommunity.com/id/6matko/\"\n        target=\"_blank\"\n        rel=\"noreferrer nofollow\"\n        class=\"hover:text-blue-900 duration-200\"\n        >6matko</a\n      ></small\n    >\n    <button\n      (click)=\"goToPlannedList()\"\n      type=\"button\"\n      class=\"text-blue-500 hover:text-blue-900 duration-200 background-transparent font-bold uppercase px-0 py-1 text-xs outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all\">\n      View all items\n    </button>\n  </div>\n</div>\n","import { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\r\nimport { bindCallback, Observable, of, Subject, throwError } from 'rxjs';\r\nimport { map, mergeMap, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { CURRENCY } from '../../../../core/currencies';\r\nimport { BuyOrder } from '../../../../models/buy-order.model';\r\nimport { ItemInfo } from '../../../../models/item-info.model';\r\nimport { TAB_ID } from '../../../../providers/tab-id.provider';\r\n\r\n@Component({\r\n  selector: 'app-popup',\r\n  templateUrl: 'popup.component.html',\r\n  styleUrls: ['popup.component.scss'],\r\n})\r\nexport class PopupComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Information about current item\r\n   *\r\n   * @type {ItemInfo}\r\n   * @memberof PopupComponent\r\n   */\r\n  itemInfo: ItemInfo;\r\n  /**\r\n   * Buy order planner form\r\n   *\r\n   * @type {FormGroup}\r\n   * @memberof PopupComponent\r\n   */\r\n  boForm: FormGroup;\r\n  /**\r\n   * Indicates if user wants to manually add information\r\n   *\r\n   * @type {boolean}\r\n   * @memberof PopupComponent\r\n   */\r\n  isManualAdding: boolean = false;\r\n  /**\r\n   * Indicates if manual adding was succcessful\r\n   *\r\n   * @type {boolean}\r\n   * @memberof PopupComponent\r\n   */\r\n  isManualSuccess: boolean = false;\r\n  /**\r\n   * List of known currencies\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  currencies = CURRENCY;\r\n  /**\r\n   * Error message\r\n   *\r\n   * @type {string}\r\n   * @memberof PopupComponent\r\n   */\r\n  error: string = '';\r\n  /**\r\n   * Subject that is responsible for unsubscribing when component gets destroyed\r\n   *\r\n   * @private\r\n   * @type {Subject<boolean>}\r\n   * @memberof PopupComponent\r\n   */\r\n  private destroy$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    @Inject(TAB_ID) readonly tabId: number,\r\n    private cdr: ChangeDetectorRef,\r\n    private formBuilder: FormBuilder,\r\n    private dbService: NgxIndexedDBService,\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initInfo();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Completing subscriptions\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Method saves buy order plan\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  save() {\r\n    // If we have \"created\" property it means that buy order was already created and\r\n    // we need to update it. Otherwise creating new one\r\n    if (!this.isManualAdding && this.itemInfo.created) {\r\n      this.updateBuyOrder();\r\n    } else {\r\n      this.createBuyOrder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method redirects user to Steam Community Market page\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  goToSCM() {\r\n    // Changing current tab to SCM via redirect\r\n    chrome.tabs.update({ url: \"https://steamcommunity.com/market\" }, () => {\r\n      // Closing popup after redirect\r\n      window.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method opens a new tab with planned buy order list (options page)\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  goToPlannedList() {\r\n    chrome.runtime.openOptionsPage(() => {\r\n      // Closing popup after redirect\r\n      window.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method sends signal to contentPage to open buy order modal\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  /**\r\n   * Method sends signal to contentPage to open buy order modal\r\n   *\r\n   * @param {number} [tabId=this.tabId] Id of tab where to open buy order modal (by default current tab)\r\n   * @param {ItemInfo} [itemInfo=this.itemInfo] Information about item where to open buy order modal (by default current item)\r\n   * @memberof PopupComponent\r\n   */\r\n  openPlaceBuyOrderWindow(tabId: number = this.tabId, itemInfo: ItemInfo = this.itemInfo) {\r\n    chrome.tabs.sendMessage(tabId, {\r\n      type: 'openBOModal',\r\n      data: {\r\n        price: itemInfo.price,\r\n        amount: itemInfo.amount,\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method sends signal to contentPage to open buy order modal on every opened SCM listing page\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  openPlaceBuyOrderWindowOnAllTabs() {\r\n    // Getting list of all SCM listing pages to open BO modals on them\r\n    bindCallback<chrome.tabs.Tab[]>(chrome.tabs.query.bind(this, { url: 'https://steamcommunity.com/market/listings/*' }))()\r\n      .pipe(\r\n        // Getting list of tab IDs because we need only them.\r\n        // Using mergeMap to make concurency\r\n        mergeMap(tabs => tabs.map(tab => tab.id)),\r\n        // Requesting information about item for each opened tab\r\n        mergeMap(tabId =>\r\n          bindCallback<ItemInfo>(chrome.tabs.sendMessage.bind(this, tabId, { type: 'getInfoFromPage' }))()\r\n            .pipe(\r\n              switchMap(itemInfo => {\r\n                // In case of error returning undefined\r\n                if (chrome.runtime.lastError) {\r\n                  return undefined;\r\n                }\r\n\r\n                // Trying to get stored information in DB (if user added planned buy order). In case if there is no\r\n                // stored information then we are returning simple item info that we gathered from page (so price & amount wouldn't be pre-filled)\r\n                return this.getSavedInfoFromDB(itemInfo).pipe(map(itemFromDB => itemFromDB ?? itemInfo))\r\n              }),\r\n              map(itemInfo => {\r\n                // If everything is fine then returning tab Id and info about item\r\n                return {\r\n                  itemInfo,\r\n                  tabId,\r\n                };\r\n              }),\r\n            )\r\n        ),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.openPlaceBuyOrderWindow(result.tabId, result.itemInfo);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method marks manual adding as enabled with all necessary setup\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  openManualAdd() {\r\n    this.isManualAdding = true;\r\n    // Adding REQUIRED validators cause we need values\r\n    this.boForm.get('appId').setValidators(Validators.required);\r\n    this.boForm.get('currencyId').setValidators(Validators.required);\r\n  }\r\n\r\n  /**\r\n   * Method clears success message (hide from display)\r\n   *\r\n   * @memberof PopupComponent\r\n   */\r\n  clearSuccessMessage() {\r\n    this.isManualSuccess = false;\r\n  }\r\n\r\n  /**\r\n   * Method requests information about item from DB in case if user placed planned order\r\n   *\r\n   * @private\r\n   * @param {ItemInfo} itemInfo Information about item to look in DB\r\n   * @return {Observable<ItemInfo>} Returns `Observable` with found item info\r\n   * @memberof PopupComponent\r\n   */\r\n  private getSavedInfoFromDB(itemInfo: ItemInfo): Observable<ItemInfo> {\r\n    return this.dbService.getByIndex('orders', 'itemName', itemInfo.itemName)\r\n      .pipe(map(boEntity => {\r\n        // Updating current info object with information from DB\r\n        Object.assign(itemInfo, boEntity);\r\n        return itemInfo;\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * Method gets information about item from page\r\n   *\r\n   * @private\r\n   * @param {number} [tabId=this.tabId] Id of tab from which information gathernig should be done. By default current page\r\n   * @return {Observable<ItemInfo>} Returns `Observable` with item info\r\n   * @memberof PopupComponent\r\n   */\r\n  private getItemInfoFromPage(tabId: number = this.tabId): Observable<ItemInfo> {\r\n    // Sending signal to content page to gather information from page itself\r\n    return bindCallback<ItemInfo>(chrome.tabs.sendMessage.bind(this, this.tabId, { type: 'getInfoFromPage' }))()\r\n      .pipe(\r\n        // If there was an error, returning undefined. Otherwise giving info from thee page\r\n        map(info => chrome.runtime.lastError ? undefined : info),\r\n        switchMap(info => {\r\n          // If we have info from page then getting stored information about this item from IndexedDB\r\n          if (info) {\r\n            return this.getSavedInfoFromDB(info);\r\n            // If there is no info then reeturning same info object\r\n          } else {\r\n            return of(info);\r\n          }\r\n        }),\r\n        takeUntil(this.destroy$),\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Method initializes popup based on information gathered from current page\r\n   *\r\n   * @private\r\n   * @memberof PopupComponent\r\n   */\r\n  private initInfo() {\r\n    this.getItemInfoFromPage()\r\n      .subscribe(info => {\r\n        // Storing information for further usage ONLY if user is currently on item info page.\r\n        // Otherwise we can't get any information and should show informative message so user\r\n        // goes to specific SCM item\r\n        if (info?.pageUrl?.includes('/market/listings/')) {\r\n          this.itemInfo = info;\r\n          // Updating form value\r\n          this.boForm.patchValue(info);\r\n          // Triggering change detection since there are changes that view needs to re-render\r\n          // and for some reason it doesn't happen automatically. Maybe due chrome extension\r\n          this.cdr.detectChanges();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method creates new buy order plan and stores it in DB\r\n   *\r\n   * @private\r\n   * @memberof PopupComponent\r\n   */\r\n  private createBuyOrder() {\r\n    // Creating new entity based on info on form\r\n    const newBOEntity = new BuyOrder(this.boForm.value);\r\n\r\n    // Checking if item with same name is already added\r\n    this.dbService.getByIndex('orders', 'itemName', newBOEntity.itemName)\r\n      .pipe(\r\n        switchMap(item => {\r\n          // If item exists then throwing error\r\n          if (item) {\r\n            return throwError('Item with this name already exists');\r\n          }\r\n          // Otherwise adding item\r\n          return this.dbService.add('orders', newBOEntity);\r\n        }),\r\n        takeUntil(this.destroy$),\r\n      )\r\n      .subscribe(result => {\r\n        // If user manually adds item then displaying success and resetting form\r\n        // so he can do it again\r\n        if (this.isManualAdding) {\r\n          this.boForm.reset({ price: 0, amount: 1 });\r\n          this.boForm.markAsUntouched();\r\n          this.isManualSuccess = true;\r\n        } else {\r\n          // Updating form value with latest update\r\n          this.boForm.patchValue(result);\r\n          this.updateItemInfo(result);\r\n        }\r\n\r\n        // Clearing error message when all is done\r\n        this.error = ''\r\n\r\n        // Triggering change detection since there are changes that view needs to re-render\r\n        // and for some reason it doesn't happen automatically. Maybe due chrome extension\r\n        this.cdr.detectChanges();\r\n      }, err => {\r\n        // Setting error message for display\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method updates buy order plan and saves it to DB\r\n   *\r\n   * @private\r\n   * @memberof PopupComponent\r\n   */\r\n  private updateBuyOrder() {\r\n    // Updating current item info with data in form\r\n    const updatedBuyOrder = Object.assign(this.itemInfo, this.boForm.value);\r\n    // Creating entity for save\r\n    const updatedBOEntity = new BuyOrder(updatedBuyOrder);\r\n    // Updating in DB\r\n    this.dbService.update('orders', updatedBOEntity)\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n      )\r\n      .subscribe(results => {\r\n        // Updating form value with updated entity. Otherwise we would have to search for it in all results\r\n        this.boForm.patchValue(updatedBOEntity);\r\n        this.updateItemInfo(updatedBOEntity);\r\n        // Triggering change detection since there are changes that view needs to re-render\r\n        // and for some reason it doesn't happen automatically. Maybe due chrome extension\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method updates currently stored item info with latest changes (from Indexed DB)\r\n   *\r\n   * @private\r\n   * @param {BuyOrder} boEntity Stored/updated entity in IndexedDB. These values will be added to item info\r\n   * @memberof PopupComponent\r\n   */\r\n  private updateItemInfo(boEntity: BuyOrder) {\r\n    Object.assign(this.itemInfo, boEntity);\r\n  }\r\n\r\n  private createForm() {\r\n    this.boForm = this.formBuilder.group({\r\n      itemName: ['', Validators.required],\r\n      price: [0, [Validators.min(0), Validators.required]],\r\n      amount: [1, [Validators.min(1), Validators.required]],\r\n      appId: [null],\r\n      currencyId: [null],\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PopupComponent } from './pages/popup/popup.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: PopupComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PopupRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopupComponent } from './pages/popup/popup.component';\nimport { PopupRoutingModule } from './popup-routing.module';\n\n@NgModule({\n  declarations: [PopupComponent],\n  imports: [CommonModule, PopupRoutingModule, ReactiveFormsModule]\n})\nexport class PopupModule { }\n","import { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    _subscribe(subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return super._subscribe(subscriber);\n    }\n    next(value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    }\n    error(error) {\n        if (!this.hasCompleted) {\n            super.error(error);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            super.next(this.value);\n        }\n        super.complete();\n    }\n}\n//# sourceMappingURL=AsyncSubject.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map"]}